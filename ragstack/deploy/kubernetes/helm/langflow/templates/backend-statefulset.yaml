apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "langflow.fullname" . }}
  labels:
    {{- include "langflow.labels" . | nindent 4 }}
spec:
  serviceName: "{{ include "langflow.fullname" . }}-service"
  replicas: {{ .Values.langflow.replicaCount }}
  selector:
    matchLabels:
      {{- include "langflow.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.langflow.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "langflow.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "langflow.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.langflow.podSecurityContext | nindent 8 }}
      volumes:
        {{- if .Values.enableTls }}
        - name: certs
          secret:
            secretName: "{{ .Values.tlsSecretName }}"
        {{- end }}
        {{- if .Values.secretProvider.enabled }}
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "{{- .Values.secretProvider.name }}"
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.langflow.securityContext | nindent 12 }}
          image: "{{ .Values.langflow.image.repository }}:{{ .Values.langflow.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.langflow.image.pullPolicy }}
          {{- if .Values.langflow.command }}
          command:
            {{- toYaml .Values.langflow.command | nindent 12 }}
          {{- end }}
          {{- if .Values.langflow.args }}
          args:
            {{- toYaml .Values.langflow.args | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.langflow.backend.port | default 7860 }}
              protocol: TCP
          volumeMounts:
            {{- if .Values.enableTls }}
            - name: certs
              readOnly: true
              mountPath: /certs
            {{- end }}
            {{- if .Values.secretProvider.enabled }}
            - name: secrets-store-inline
              mountPath: "/mnt/secrets"
              readOnly: true
            {{- end }}
            {{- if eq .Values.langflow.database.type "sqlite" }}
            - name: data
              mountPath: /data
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.langflow.backend.port | default 7860 }}
            initialDelaySeconds: {{ .Values.langflow.backend.initialDelaySeconds | default 60 }}
            periodSeconds: {{ .Values.langflow.backend.periodSeconds | default 15 }}
            timeoutSeconds: {{ .Values.langflow.backend.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.langflow.backend.failureThreshold | default 2 }}   
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.langflow.backend.port | default 7860 }}
            initialDelaySeconds: {{ .Values.langflow.backend.initialDelaySeconds | default 45 }}
            periodSeconds: {{ .Values.langflow.backend.periodSeconds | default 15 }}
            timeoutSeconds: {{ .Values.langflow.backend.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.langflow.backend.failureThreshold | default 2 }}   
          env:
            - name: ENVIRONMENT 
              value: "{{ .Values.environment | default "dev" }}"
            - name: DOMAIN
              value: "{{ .Values.domain | default "localhost" }}"
            {{- if and .Values.langflow.database .Values.langflow.database.secretsEnabled }}
            - name: LANGFLOW_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: db-sql-url
                  key: db-sql-url.txt
            {{- else if and .Values.langflow.database .Values.langflow.database.url }}
              value: "{{ .Values.langflow.database.url }}"
            {{- end }}
            - name: LANGFLOW_HOST
              value: "{{ .Values.langflow.host | default "0.0.0.0" }}"
            - name: LANGFLOW_BACKEND_ONLY
              value: "{{ .Values.langflow.backend.backendOnly | default false }}"
          resources:
            {{- toYaml .Values.langflow.resources | nindent 12 }}
      {{- with .Values.langflow.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.langflow.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.langflow.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if eq .Values.langflow.database.type "sqlite" }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.langflow.database.size }}
      storageClassName: "langflow-sqlite"
  {{- end }}